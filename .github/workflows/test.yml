name: Tests

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
      - name: Installing Dependencies
        run: npm i
      - name: Executing Linter
        run: npm run lint

  e2e:
    runs-on: ubuntu-latest
    needs: lint
      # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14.5-alpine3.16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: emails
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
      - name: Installing Dependencies
        run: npm i
      - name: Bundle for production
        env:
          DATABASE_URL: postgres://postgres:mypassword@postgres:5432/emails
        run: npm run build
      - name: Executing Cypress
        run: npm run e2e
